org: giangtranmanh
app: serverless-demo
service: serverless-demo
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  environment:
    DYNAMODB_CUSTOMER_TABLE: ${self:service}-customerTable-${sls:stage}

plugins:
  - serverless-offline

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get

  createCustomer:
    handler: createCustomer.createCustomer
    events:
      - httpApi:
          path: /customer
          method: post

  getCustomers:
    handler: getCustomers.getCustomers
    events:
      - httpApi:
          path: /customer
          method: get

  getCustomersByName:
    handler: getCustomerByName.getCustomerByName
    events:
      - httpApi:
          path: /customer/{name}
          method: get

  deleteCustomersByName:
    handler: deleteCustomer.deleteCustomer
    events:
      - httpApi:
          path: /customer/{name}
          method: delete

  editCustomersByName:
    handler: editCustomer.editCustomer
    events:
      - httpApi:
          path: /customer/{name}
          method: put

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-customerTable-${sls:stage}
